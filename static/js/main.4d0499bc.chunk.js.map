{"version":3,"sources":["styles/globalStyles.js","img/popcorn.svg","Components/SearchBar/SearchBar.jsx","Components/Jumbotron/Jumbotron.jsx","Components/CardMovies/CardMovies.jsx","Components/MoviesList/MovieList.jsx","img/logo-movie.svg","Components/Navbar/Navigatebar.jsx","Components/TitleSection/TitleSection.jsx","Components/ButtonGrey/ButtonGrey.jsx","api/movieapi.js","Components/Footer/Footer.jsx","Pages/HomePage.jsx","Pages/MoviesPage.jsx","Pages/TvShowsPage.jsx","Components/Utilites/ScrollToTop.jsx","Components/MovieDetail/MovieDetail.jsx","Components/TrailerCard/TrailerCard.jsx","Pages/MovieDetailPage.jsx","Pages/SearchPage.jsx","Pages/NotFoundPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","FormControlStyled","styled","InputBase","useStyles","makeStyles","theme","root","padding","display","alignItems","width","borderRadius","backgroundColor","boxShadow","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchBar","props","classes","useState","searchkey","setSearchkey","history","useHistory","Paper","component","className","onSubmit","e","preventDefault","push","placeholder","inputProps","onChange","disabled","target","value","IconButton","type","Jmb","div","Text","TitleJumb","SubTitleJumb","SearchWrap","FormWrap","Jumbotron","title","subtitle","PosterWrap","ImagePoster","img","TitlePoster","DatePoster","CardMovies","to","isMovie","id","style","textDecoration","src","SkeletonMovie","Skeleton","MovieList","Row","loading","Array","isLimit4","map","_","index","Col","lg","sm","animation","variant","widht","moviesList","slice","movie","poster_path","name","release_date","first_air_date","Navigatebar","Navbar","bg","expand","Container","Brand","as","Link","alt","logo","Toggle","Collapse","Nav","TitleWrapper","Icon","Title","TitleSection","customStyle","StyledLink","ButtonGrey","onClick","undefined","stopPropagation","link","text","axios","create","baseURL","params","api_key","process","FooterWrap","FooterGap","Footer","HomePage","setMoviesList","moviesArray","JSON","stringify","tvList","setTvList","tvArray","loadingM","setLoadingM","loadingT","setLoadingT","useEffect","a","movieapi","get","res","data","results","fetchData","fluid","popcornIcon","MoviesPage","list","pageNumber","search","setLoading","isLoad","setIsLoad","fetchDataDiscover","console","log","tempArr","m","fetchDataSearch","md","val","mv","onChangeBro","TvShowsPage","ScrollToTop","pathname","useLocation","window","scrollTo","Poster","Procedure","Tagline","ItemGroup","ItemTitle","ItemSubtitle","MovieDetail","span","offset","procedure","tagline","genres","n","idx","arr","length","synopsis","flexWrap","justifyContent","gap","date","includes","rating","director","original_name","episodeCount","TrailerWrap","Date","TrailerCard","url","controls","light","playIcon","substring","MovieDetailPage","movieData","setMovieData","setGenres","crewData","setCrewData","trailerData","setTrailerData","similiar","setSimiliar","useParams","resActor","resTrailer","resSimiliar","original_title","production_companies","overview","vote_average","crew","filter","job","number_of_episodes","fontSize","textAlign","marginTop","key","published_at","SearchPage","location","q","URLSearchParams","tv","setMovie","fetchDataMovie","l","fetchDataTv","alignSelf","Subtext","NotFoundPage","href","rel","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d0499bc.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        background-color: #F9F9F9;\r\n        min-height: 100vh;\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .disabled-link {\r\n        pointer-events: none;\r\n        opacity: .65;\r\n    }\r\n    .btn:focus,.btn:active {\r\n        outline: 0 !important;\r\n    }\r\n    .player {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export default __webpack_public_path__ + \"static/media/popcorn.25027add.svg\";","import { IconButton, InputBase, makeStyles, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst FormControlStyled = styled(InputBase)`\r\n    /* box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.1); */\r\n    border-radius: 40px;\r\n    padding: 0.75rem 1.3rem;\r\n    font-weight: 300;\r\n    color: #6B6B6B;\r\n    font-size: 1.125rem;\r\n`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        borderRadius: '40px',\r\n        backgroundColor: '#FFFFFF',\r\n        boxShadow: '0px 1px 10px rgba(0, 0, 0, 0.1)'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nconst SearchBar = (props) => {\r\n    const classes = useStyles();\r\n    const [searchkey, setSearchkey] = useState(\"\")\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push(`/search?q=${searchkey}`)\r\n        setSearchkey(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper component=\"form\" className={classes.root} onSubmit={submitHandler}>\r\n                <FormControlStyled\r\n                    className={classes.input}\r\n                    placeholder=\"Search movies, tv show, series, people....\"\r\n                    inputProps={{ 'aria-label': 'Search movies, tv show, series, people....' }}\r\n                    onChange={props.disabled ? (e) => props.onChange(e.target.value) : (e) => setSearchkey(e.target.value)}\r\n                />\r\n                <IconButton type=\"submit\" disabled={props.disabled} className={classes.iconButton} aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\n\r\nconst Jmb = styled.div`\r\n    background-image: url('https://www.themoviedb.org/t/p/w1920_and_h600_multi_faces_filter(duotone,032541,017594)/8s4h9friP6Ci3adRGahHARVd76E.jpg');\r\n    background-position: center center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    height: 350px;\r\n    width: 100%;\r\n    position: relative;\r\n`\r\n\r\nconst Text = styled.div`\r\n    padding-top: 5rem;\r\n    padding-left: 3rem;\r\n    padding-right: 3rem;\r\n    padding-bottom: 0.5rem;\r\n    @media screen and (max-width: 633px) {\r\n        padding-top: 2rem;\r\n    }\r\n`\r\nconst TitleJumb = styled.div`\r\n    font-weight: 500;\r\n    color: white;\r\n    font-size: 1.875rem;\r\n    line-height: 37px;\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 1.35rem;\r\n    }\r\n`\r\nconst SubTitleJumb = styled.div`\r\n    margin-top: 10px;\r\n    font-weight: 200;\r\n    color: white;\r\n    font-size: 1.125rem;\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 1rem;\r\n    }\r\n`\r\n\r\nconst SearchWrap = styled.div`\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-bottom: 30px;\r\n    position: absolute;\r\n    bottom:0px;\r\n    width: 100%;\r\n`\r\n\r\nconst FormWrap = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 600px;\r\n`\r\n\r\nconst Jumbotron = (props) => {\r\n    return (\r\n        <Jmb>\r\n            <Text>\r\n                <TitleJumb>{props.title}</TitleJumb>\r\n                <SubTitleJumb>{props.subtitle}</SubTitleJumb>\r\n            </Text>\r\n            <SearchWrap>\r\n                <FormWrap>\r\n                    <SearchBar \r\n                        disabled={false}\r\n                    />\r\n                </FormWrap>\r\n            </SearchWrap>\r\n        </Jmb>\r\n    )\r\n}\r\n\r\nexport default Jumbotron\r\n","import styled from 'styled-components'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PosterWrap = styled.div`\r\n    text-align: center;\r\n    padding: 30px;\r\n    @media screen and (max-width: 633px) {\r\n        padding-right: 50px;\r\n        padding-left: 50px\r\n    }\r\n`\r\n\r\nconst ImagePoster = styled.img`\r\n    width: 100%;\r\n    border-radius: 15px;\r\n    transition: transform .5s ease;\r\n    &:hover {\r\n        transform: scale(1.05);\r\n    }\r\n`\r\n\r\nconst TitlePoster = styled.div`\r\n    font-weight: 500;\r\n    font-size: 0.8125rem;\r\n    color: #434343;\r\n    margin-top: 15px;\r\n`\r\n\r\nconst DatePoster = styled.div`\r\n    font-weight: 300;\r\n    font-size: 0.8125rem;\r\n    color: #6D6D6D;\r\n    margin-top: 6px;\r\n`\r\n\r\nconst CardMovies = (props) => {\r\n    return (\r\n        <PosterWrap>\r\n            <Link to={`/${props.isMovie ? 'movie' : 'tv'}/${props.id}`} style={{ textDecoration: 'none' }}>\r\n                <ImagePoster src={\"http://image.tmdb.org/t/p/w342/\" + props.ImagePoster} />\r\n                <TitlePoster>{props.TitlePoster}</TitlePoster>\r\n                <DatePoster>{props.DatePoster ?? 'Coming Soon'}</DatePoster>\r\n            </Link>\r\n        </PosterWrap>\r\n    )\r\n}\r\n\r\nexport default CardMovies\r\n","import { Col, Row } from 'react-bootstrap'\r\nimport CardMovies from '../CardMovies/CardMovies'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport styled from 'styled-components'\r\n\r\nconst SkeletonMovie = styled(Skeleton)`\r\n    border-radius: 15px;\r\n    margin: 22px;\r\n`\r\n\r\nconst MovieList = (props) => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {props.loading ? [...Array(props.isLimit4 ? 4 : 20)].map((_, index) => (\r\n                    <Col lg={3} sm={6} key={index}>\r\n                        <SkeletonMovie animation=\"wave\" variant=\"rect\" widht=\"100%\" height={300}/>\r\n                    </Col>\r\n                )) : (props.isLimit4 ? props.moviesList.slice(0, 4).map((movie) => (\r\n                    <Col lg={3} sm={6} key={movie.id}>\r\n                        <CardMovies\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            ImagePoster={movie.poster_path}\r\n                            TitlePoster={movie.title ?? movie.name}\r\n                            DatePoster={movie.release_date ?? movie.first_air_date}\r\n                            isMovie={movie.release_date ? true : false}\r\n                        />\r\n                    </Col>\r\n                )) : props.moviesList.map((movie) => (\r\n                    <Col lg={3} sm={6} key={movie.id}>\r\n                        <CardMovies\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            ImagePoster={movie.poster_path}\r\n                            TitlePoster={movie.title ?? movie.name}\r\n                            DatePoster={movie.release_date ?? movie.first_air_date}\r\n                            isMovie={movie.title ? true : false}\r\n                        />\r\n                    </Col>\r\n                )) )}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","export default __webpack_public_path__ + \"static/media/logo-movie.35e7453f.svg\";","import React from 'react'\r\nimport logo from '../../img/logo-movie.svg'\r\nimport { Navbar, Container, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigatebar = () => {\r\n    return (\r\n        <Navbar bg=\"white\" expand=\"lg\" className=\"mb-5\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        width=\"35\"\r\n                        height=\"35\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />\r\n                    Movies App\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/movies\">Movies</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/tv-shows\">TV Show</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/person\">Person</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigatebar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TitleWrapper = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 5px;\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-weight: normal;\r\n    font-size: 1.5rem;\r\n`\r\n\r\nconst TitleSection = (props) => {\r\n\r\n    return (\r\n        <TitleWrapper style={ props.customStyle }>\r\n            <Icon src={props.img} alt=\"Title Section\" />\r\n            <Title>{props.title}</Title>\r\n        </TitleWrapper>\r\n    )\r\n}\r\n\r\nexport default TitleSection\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLink = styled(Link)`\r\n    background: #EDEDED;\r\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.15) !important;\r\n    border-radius: 5px !important;\r\n    border-color: unset !important;\r\n    border: unset !important;\r\n    color: #5F5F5F;\r\n    font-weight: 500;\r\n`\r\n\r\nconst ButtonGrey = (props) => {\r\n    return (\r\n        <StyledLink\r\n            onClick={props.onClick !== undefined ? () => props.onClick() : (e) => e.stopPropagation()}\r\n            to={props.link}\r\n            className={props.loading ? 'btn disabled-link' : 'btn'}\r\n        >{props.loading ? 'Loading..' : props.text }</StyledLink>\r\n    )\r\n}\r\n\r\nexport default ButtonGrey\r\n","import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n    params: {\r\n        api_key: process.env.REACT_APP_MOVIEDB_API_KEY,\r\n    },\r\n})\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FooterWrap = styled.div`\r\n    margin-top: 25px;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    text-align: center;\r\n    background-color: #EBEBEB;\r\n    position:absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n`\r\n\r\nconst Text = styled.div`\r\n    font-weight: 300;\r\n    font-size: 0.875rem;\r\n`\r\n\r\nconst FooterGap = styled.div`\r\n    padding-top: 6rem;\r\n`\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <FooterGap />\r\n            <FooterWrap>\r\n                <Text>Create with Love by KobuL</Text>\r\n            </FooterWrap>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport popcornIcon from '../img/popcorn.svg'\r\nimport Jumbotron from '../Components/Jumbotron/Jumbotron';\r\nimport MovieList from '../Components/MoviesList/MovieList';\r\nimport Navigatebar from '../Components/Navbar/Navigatebar';\r\nimport TitleSection from '../Components/TitleSection/TitleSection';\r\nimport ButtonGrey from '../Components/ButtonGrey/ButtonGrey';\r\nimport movieapi from '../api/movieapi';\r\nimport Footer from '../Components/Footer/Footer';\r\n\r\nconst HomePage = () => {\r\n    const [moviesList, setMoviesList] = useState([])\r\n    const moviesArray = JSON.stringify(moviesList)\r\n    const [tvList, setTvList] = useState([])\r\n    const tvArray = JSON.stringify(tvList)\r\n    const [loadingM, setLoadingM] = useState(true)\r\n    const [loadingT, setLoadingT] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await movieapi.get(`discover/movie`, {\r\n                params: {},\r\n            })\r\n            setMoviesList(res.data.results)\r\n            setLoadingM(false)\r\n        }\r\n        fetchData()\r\n    }, [moviesArray])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await movieapi.get(`trending/tv/week`, {\r\n                params: {},\r\n            })\r\n            setTvList(res.data.results)\r\n            setLoadingT(false)\r\n        }\r\n        fetchData()\r\n    }, [tvArray])\r\n    \r\n    return (\r\n        <>\r\n            <Navigatebar />\r\n            <Container fluid=\"xxl\" className=\"mt-4\">\r\n                <Jumbotron \r\n                    title=\"Selamat Datang di Movies App\"\r\n                    subtitle=\"Cari dan temukan lebih dari 1000 film dan series favorit disini.\"\r\n                />\r\n            </Container>\r\n            <Container>\r\n                <Row className=\"mt-5\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <TitleSection\r\n                            img={popcornIcon}\r\n                            title=\"Popular Movies\"\r\n                        />\r\n                        <ButtonGrey \r\n                            link='/movies'\r\n                            text='Lihat Semua'\r\n                        />\r\n                    </div>\r\n                </Row>\r\n                <MovieList\r\n                    moviesList={moviesList}\r\n                    isLimit4={true}\r\n                    loading={loadingM}\r\n                />\r\n                <Row className=\"mt-5\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <TitleSection\r\n                            img={popcornIcon}\r\n                            title=\"Popular TV Shows\"\r\n                        />\r\n                        <ButtonGrey\r\n                            link='/tv-shows'\r\n                            text='Lihat Semua'\r\n                        />\r\n                    </div>\r\n                </Row>\r\n                <MovieList\r\n                    moviesList={tvList}\r\n                    isLimit4={true}\r\n                    loading={loadingT}\r\n                />\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport movieapi from '../api/movieapi'\r\nimport ButtonGrey from '../Components/ButtonGrey/ButtonGrey'\r\nimport Footer from '../Components/Footer/Footer'\r\nimport MovieList from '../Components/MoviesList/MovieList'\r\nimport Navigatebar from '../Components/Navbar/Navigatebar'\r\nimport SearchBar from '../Components/SearchBar/SearchBar'\r\nimport TitleSection from '../Components/TitleSection/TitleSection'\r\nimport popcornIcon from '../img/popcorn.svg'\r\n\r\nconst MoviesPage = () => {\r\n    const [moviesList, setMoviesList] = useState({\r\n        list: [],\r\n        pageNumber: 1,\r\n        search: \"\"\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    const [isLoad, setIsLoad] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchDataDiscover = async () => {\r\n            const res = await movieapi.get(`discover/movie?page=${moviesList.pageNumber}`)\r\n            console.log(`data page ${moviesList.pageNumber} get`)\r\n            const tempArr = res.data.results\r\n            setMoviesList(m => ({ ...m, list: [...m.list, ...tempArr]}))\r\n            setLoading(false)\r\n            setIsLoad(false)\r\n        }\r\n        const fetchDataSearch = async () => {\r\n            const res = await movieapi.get(`search/movie?query=${moviesList.search}`)\r\n            console.log(`search : ${moviesList.search}`)\r\n            setMoviesList(m => ({ ...m, list: res.data.results }))\r\n            setLoading(false)\r\n        }\r\n        if (moviesList.search === \"\") {\r\n            fetchDataDiscover()\r\n        } else {\r\n            fetchDataSearch()\r\n        }\r\n    }, [moviesList.pageNumber, moviesList.search])\r\n\r\n    const onChangeBro = (val) => {\r\n        setMoviesList(mv => ({\r\n            ...mv,\r\n            search: val\r\n        }))\r\n        if (val === \"\") {\r\n            setMoviesList(m => ({ \r\n                ...m, \r\n                list: [],\r\n                pageNumber: 1\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onClickLoad = () => {\r\n        setIsLoad(true)\r\n        setMoviesList(mv => ({\r\n            ...mv,\r\n            pageNumber: mv.pageNumber + 1\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navigatebar />\r\n            <Container>\r\n                <Row className=\"mt-5\">\r\n                    <Col md={6} className=\"order-md-responsive\">\r\n                        <TitleSection\r\n                            img={popcornIcon}\r\n                            title=\"Popular Movies\"\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SearchBar \r\n                            onChange={(val) => onChangeBro(val)} \r\n                            disabled={true}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5\">\r\n                    <MovieList\r\n                        moviesList={moviesList.list}\r\n                        isLimit4={false}\r\n                        loading={loading}\r\n                    />\r\n                </Row>\r\n                {moviesList.search === \"\" ? \r\n                    <Row>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <ButtonGrey\r\n                                text='Load More'\r\n                                onClick={() => onClickLoad()}\r\n                                loading={isLoad}\r\n                                link=\"#\"\r\n                            />\r\n                        </div>\r\n                    </Row> : null}\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoviesPage\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport movieapi from '../api/movieapi'\r\nimport ButtonGrey from '../Components/ButtonGrey/ButtonGrey'\r\nimport Footer from '../Components/Footer/Footer'\r\nimport MovieList from '../Components/MoviesList/MovieList'\r\nimport Navigatebar from '../Components/Navbar/Navigatebar'\r\nimport SearchBar from '../Components/SearchBar/SearchBar'\r\nimport TitleSection from '../Components/TitleSection/TitleSection'\r\nimport popcornIcon from '../img/popcorn.svg'\r\n\r\nconst TvShowsPage = () => {\r\n    const [moviesList, setMoviesList] = useState({\r\n        list: [],\r\n        pageNumber: 1,\r\n        search: \"\"\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    const [isLoad, setIsLoad] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchDataDiscover = async () => {\r\n            const res = await movieapi.get(`trending/tv/week?page=${moviesList.pageNumber}`)\r\n            console.log(`data page ${moviesList.pageNumber} get`)\r\n            const tempArr = res.data.results\r\n            setMoviesList(m => ({ ...m, list: [...m.list, ...tempArr] }))\r\n            setLoading(false)\r\n            setIsLoad(false)\r\n        }\r\n        const fetchDataSearch = async () => {\r\n            const res = await movieapi.get(`search/tv?query=${moviesList.search}`)\r\n            console.log(`search : ${moviesList.search}`)\r\n            setMoviesList(m => ({ ...m, list: res.data.results }))\r\n            setLoading(false)\r\n        }\r\n        if (moviesList.search === \"\") {\r\n            fetchDataDiscover()\r\n        } else {\r\n            fetchDataSearch()\r\n        }\r\n    }, [moviesList.pageNumber, moviesList.search])\r\n\r\n    const onChangeBro = (val) => {\r\n        setMoviesList(mv => ({\r\n            ...mv,\r\n            search: val\r\n        }))\r\n        if (val === \"\") {\r\n            setMoviesList(m => ({\r\n                ...m,\r\n                list: [],\r\n                pageNumber: 1\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onClickLoad = () => {\r\n        setIsLoad(true)\r\n        setMoviesList(mv => ({\r\n            ...mv,\r\n            pageNumber: mv.pageNumber + 1\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navigatebar />\r\n            <Container>\r\n                <Row className=\"mt-5\">\r\n                    <Col md={6} className=\"order-md-responsive\">\r\n                        <TitleSection\r\n                            img={popcornIcon}\r\n                            title=\"Popular TV Shows\"\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SearchBar onChange={(val) => onChangeBro(val)} disabled={true}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5\">\r\n                    <MovieList\r\n                        moviesList={moviesList.list}\r\n                        isLimit4={false}\r\n                        loading={loading}\r\n                        link=\"#\"\r\n                    />\r\n                </Row>\r\n                {moviesList.search === \"\" ?\r\n                    <Row>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <ButtonGrey\r\n                                text='Load More'\r\n                                onClick={() => onClickLoad()}\r\n                                loading={isLoad}\r\n                            />\r\n                        </div>\r\n                    </Row> : null}\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TvShowsPage\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n","import Skeleton from '@material-ui/lab/Skeleton'\r\nimport React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst Poster = styled.img`\r\n    border-radius: 15px;\r\n    width: 100%;\r\n    @media screen and (max-width: 767px) {\r\n        padding-left: 5rem;\r\n        padding-right: 5rem;\r\n    }\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-weight: 600;\r\n    color: #3E3E3E;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 3px;\r\n    @media screen and (max-width: 767px) {\r\n        margin-top: 30px;\r\n    }\r\n`\r\n\r\nconst Procedure = styled.div`\r\n    font-weight: normal;\r\n    color: #3F3F3F;\r\n    font-size: 0.875rem;\r\n    margin-bottom: 3px;\r\n`\r\n\r\nconst Tagline = styled.div`\r\n    font-style: italic;\r\n    color: #747474;\r\n    font-size: 0.875rem;\r\n`\r\n\r\nconst ItemGroup = styled.div`\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst ItemTitle = styled.div`\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    color: #4A4A4A;\r\n`\r\n\r\nconst ItemSubtitle = styled.div`\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 14px;\r\n    color: #424242;\r\n`\r\n\r\nconst SkeletonMovie = styled(Skeleton)`\r\n    border-radius: 15px;\r\n    margin: 22px;\r\n`\r\n\r\nconst MovieDetail = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={{ span: 4, offset: 1 }} lg={{ span: 3, offset: 1 }}>\r\n                    {props.loading ? (\r\n                        <SkeletonMovie animation=\"wave\" variant=\"rect\" widht=\"100%\" height={400} />\r\n                    ) : (\r\n                        <Poster src = {\"http://image.tmdb.org/t/p/w342/\" + props.img} />\r\n                    )}\r\n                </Col>\r\n                <Col md={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 1 }}>\r\n                    <ItemGroup>\r\n                        <Title>{props.loading ? <Skeleton variant=\"text\" /> : props.title }</Title>\r\n                        <Procedure>{props.loading ? <Skeleton variant=\"text\" /> : props.procedure}</Procedure>\r\n                        <Tagline>{props.loading ? <Skeleton variant=\"text\" /> : props.tagline}</Tagline>\r\n                    </ItemGroup>\r\n                    <ItemGroup>\r\n                        <ItemTitle>Genres</ItemTitle>\r\n                        <ItemSubtitle>{props.loading ? <Skeleton variant=\"text\" /> : props.genres.map((n, idx, arr) => {\r\n                            if (arr.length - 1 === idx) {\r\n                                return n.name\r\n                            } else {\r\n                                return n.name + ', '\r\n                            }\r\n                        })}</ItemSubtitle>\r\n                    </ItemGroup>\r\n                    <ItemGroup>\r\n                        <ItemTitle>Synopsis</ItemTitle>\r\n                        <ItemSubtitle>{props.loading ? <Skeleton variant=\"text\" /> : props.synopsis}</ItemSubtitle>\r\n                    </ItemGroup>\r\n                    <div className=\"col-12\" style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'start', gap: '1rem' }}>\r\n                        <div className=\"d-block me-5\">\r\n                            <ItemTitle>Released Date</ItemTitle>\r\n                            <ItemSubtitle>{props.loading ? <Skeleton variant=\"text\" /> : (props.date.includes(\"-\") ? props.date : 'Coming Soon')}</ItemSubtitle>\r\n                        </div>\r\n                        <div className=\"d-block me-5\">\r\n                            <ItemTitle>Rating</ItemTitle>\r\n                            <ItemSubtitle>{props.loading ? <Skeleton variant=\"text\" /> : ((props.rating === 0 ? 'NaN' : props.rating) + ' / 10')}</ItemSubtitle>\r\n                        </div>\r\n                        <div className=\"d-block me-5\">\r\n                            <ItemTitle>{props.isMovie ? 'Director' : 'Episode Count'}</ItemTitle>\r\n                            <ItemSubtitle>{props.loading ? <Skeleton variant=\"text\" /> : (props.isMovie ? (props.director.map((n, idx, arr) => arr.length - 1 === idx ? n.original_name : n.original_name + ', ')) : props.episodeCount + ' Episode')}</ItemSubtitle>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\nimport styled from 'styled-components'\r\n\r\nconst TrailerWrap = styled.div`\r\n    position: relative;\r\n    padding-top: 56.25%;\r\n`\r\n\r\nconst Title = styled.div`\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 13px;\r\n    color: #434343;\r\n    margin-top: 12px;\r\n`\r\n\r\nconst Date = styled.div`\r\n    text-align: center;\r\n    font-weight: 300;\r\n    font-size: 13px;\r\n    color: #6D6D6D;\r\n    margin-top: 6px;\r\n`\r\n\r\nconst TrailerCard = (props) => {\r\n    return (\r\n        <>\r\n            <TrailerWrap>\r\n                <ReactPlayer className='player' url={`https://www.youtube.com/watch?v=${props.url}`} controls={true} width=\"100%\" height=\"100%\" light={true} playIcon={false} />\r\n            </TrailerWrap>\r\n            <Title>{props.title}</Title>\r\n            <Date>{props.date.substring(0, 10)}</Date>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrailerCard\r\n","import Skeleton from '@material-ui/lab/Skeleton'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Container, Col, Row } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom'\r\nimport movieapi from '../api/movieapi'\r\nimport MovieDetail from '../Components/MovieDetail/MovieDetail'\r\nimport MovieList from '../Components/MoviesList/MovieList'\r\nimport Navigatebar from '../Components/Navbar/Navigatebar'\r\nimport TitleSection from '../Components/TitleSection/TitleSection'\r\nimport TrailerCard from '../Components/TrailerCard/TrailerCard'\r\nimport popcornIcon from '../img/popcorn.svg'\r\n\r\nconst MovieDetailPage = () => {\r\n    const [movieData, setMovieData] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [crewData, setCrewData] = useState([])\r\n    const [trailerData, setTrailerData] = useState([])\r\n    const [similiar, setSimiliar] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let { id, type } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await movieapi.get(`${type}/${id}`)\r\n            setMovieData(res.data)\r\n            setGenres(res.data.genres)\r\n            const resActor = await movieapi.get(`${type}/${id}/credits`)\r\n            setCrewData(resActor.data)\r\n            const resTrailer = await movieapi.get(`${type}/${id}/videos`)\r\n            setTrailerData(resTrailer.data.results)\r\n            const resSimiliar = await movieapi.get(`${type}/${id}/similar`)\r\n            setSimiliar(resSimiliar.data.results)\r\n            setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, [id, type])\r\n    return (\r\n        <>\r\n            <Navigatebar />\r\n            <MovieDetail \r\n                img={movieData.poster_path}\r\n                title={movieData.original_title ?? movieData.name}\r\n                procedure={movieData.production_companies && (movieData.production_companies.length === 0 ? 'NaN' : movieData.production_companies[0].name)}\r\n                tagline={movieData.tagline}\r\n                synopsis={movieData.overview}\r\n                genres={genres}\r\n                date={movieData.release_date ?? movieData.first_air_date}\r\n                rating={movieData.vote_average}\r\n                director={crewData.crew && crewData.crew.filter((n) => n.job === 'Director')}\r\n                loading={loading}\r\n                isMovie={movieData.original_title ? true : false}\r\n                episodeCount={movieData.number_of_episodes && movieData.number_of_episodes}\r\n            />\r\n            <Container>\r\n                <div style={{ fontSize: '24px', textAlign: 'center', marginTop: '30px' }}>Trailer</div>\r\n                <Row className=\"mt-4\">\r\n                    { loading ? [...Array(2)].map((n, idx) => (\r\n                        <Col md={6} className=\"mb-3\" key={idx}>\r\n                            <Skeleton variant=\"rect\" width='100%' height={300} />\r\n                        </Col>\r\n                    )) : trailerData.filter((n) => n.type === 'Trailer').slice(0, 2).map((n, idx) => (\r\n                        <Col md={6} className=\"mb-3\" key={idx}>\r\n                            <TrailerCard\r\n                                url={n.key}\r\n                                title={n.name}\r\n                                date={n.published_at}\r\n                            />\r\n                        </Col>\r\n                    )) }\r\n                </Row>\r\n                <div className=\"mt-3\">\r\n                    <TitleSection\r\n                        img={popcornIcon}\r\n                        title=\"You May Like It\"\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <MovieList\r\n                        moviesList={similiar}\r\n                        isLimit4={true}\r\n                        loading={loading}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieDetailPage\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport movieapi from '../api/movieapi'\r\nimport MovieList from '../Components/MoviesList/MovieList'\r\nimport Navigatebar from '../Components/Navbar/Navigatebar'\r\nimport SearchBar from '../Components/SearchBar/SearchBar'\r\nimport TitleSection from '../Components/TitleSection/TitleSection'\r\nimport popcornIcon from '../img/popcorn.svg'\r\n\r\nconst SearchPage = ({ location }) => {\r\n    const params = new URLSearchParams(location.search)\r\n    const q = params.get(\"q\")\r\n    const [movie, setMovie] = useState({\r\n        movie: [],\r\n        tv: []\r\n    })\r\n    const [loading, setLoading] = useState({\r\n        tv: true,\r\n        movie: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchDataMovie = async () => {\r\n            const res = await movieapi.get(`search/movie?query=${q}`)\r\n            setMovie(m => ({\r\n                ...m,\r\n                movie: res.data.results.slice(0, 4)\r\n            }))\r\n            setLoading(l => ({\r\n                ...l,\r\n                movie: false\r\n            }))\r\n        }\r\n        const fetchDataTv = async () => {\r\n            const res = await movieapi.get(`search/tv?query=${q}`)\r\n            setMovie(m => ({\r\n                ...m,\r\n                tv: res.data.results.slice(0, 4)\r\n            }))\r\n            setLoading(l => ({\r\n                ...l,\r\n                tv: false\r\n            }))\r\n        }\r\n        fetchDataMovie()\r\n        fetchDataTv()\r\n    }, [q])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navigatebar />\r\n            <Container>\r\n                <Row className=\"mb-4\">\r\n                    <Col md={6} className=\"order-md-responsive\" style={{ alignSelf: 'center' }}>\r\n                        Search Key : {q}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SearchBar disabled={false} />\r\n                    </Col>\r\n                </Row>\r\n                <TitleSection\r\n                    img={popcornIcon}\r\n                    title=\"Movie\"\r\n                />\r\n                {movie.movie.length > 0 ? (<MovieList\r\n                    moviesList={movie.movie}\r\n                    isLimit4={true}\r\n                    loading={loading.movie}\r\n                />) : <h5 style={{ textAlign: 'center', margin: '100px' }}>No Result</h5> }\r\n                <TitleSection\r\n                    img={popcornIcon}\r\n                    title=\"TV Shows\"\r\n                />\r\n                {movie.movie.length > 0 ? (<MovieList\r\n                    moviesList={movie.tv}\r\n                    isLimit4={true}\r\n                    loading={loading.tv}\r\n                />) : <h5 style={{ textAlign: 'center', margin: '10px' }}>No Result</h5>}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Navigatebar from '../Components/Navbar/Navigatebar'\r\n\r\nconst Text = styled.div`\r\n    text-align: center;\r\n    font-weight: 600;\r\n    color: #3C3C3C;\r\n    font-size: 30px;\r\n    padding-top: 50px;\r\n`\r\n\r\nconst Subtext = styled.div`\r\n    text-align: center;\r\n    font-weight: normal;\r\n    color: #000000;\r\n    font-size: 30px;\r\n`\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <Navigatebar />\r\n            <Text>\r\n                Cooming Soon ^^\r\n            </Text>\r\n            <Subtext>\r\n                Donate <a href=\"https://saweria.co/kobulwidodo\" target=\"_blank\" rel=\"noreferrer\">here</a> for boosting me to code faster 👾\r\n            </Subtext>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport GlobalStyle from './styles/globalStyles';\nimport HomePage from './Pages/HomePage';\nimport MoviesPage from './Pages/MoviesPage';\nimport TvShowsPage from './Pages/TvShowsPage';\nimport ScrollToTop from './Components/Utilites/ScrollToTop';\nimport MovieDetailPage from './Pages/MovieDetailPage';\nimport SearchPage from './Pages/SearchPage';\nimport NotFoundPage from './Pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n        <GlobalStyle />\n        <ScrollToTop />\n        <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/movies\" exact component={MoviesPage} />\n            <Route path=\"/tv-shows\" exact component={TvShowsPage} />\n            <Route path=\"/:type/:id\" exact component={MovieDetailPage} />\n            <Route path=\"/search\" exact component={SearchPage} />\n            <Route path='/person' exact component={NotFoundPage} />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}